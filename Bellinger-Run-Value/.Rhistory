mutate(Inning_ID = paste(game_pk, inning, inning_topbot))
knitr::opts_chunk$set(echo = FALSE)
library(devtools)
source_gist(8892981)
source_gist(8892999)
library(readr)
all2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(all2022) <- fields[, "Header"]
fields
all2022
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + RUN3_DEST_ID > 3)) -> DATA2022
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
knitr::opts_chunk$set(echo = FALSE)
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
library(tidyverse)
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
knitr::opts_chunk$set(echo = FALSE)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) -> data2022
data2022 |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS.CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) -> data2022
data2022 |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
RUNS_out <- matrix(round(RUNS$Mean, 2), 8, 3)
dimnames(RUNS_out)[[2]] <- c("0 outs", "1 out", "2 outs")
dimnames(RUNS_out)[[1]] <- c("000", "001", "010", "011",
"100", "101", "110", "111")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
RUNS_out <- matrix(round(RUNS$Mean, 2), 8, 3)
dimnames(RUNS_out)[[2]] <- c("0 outs", "1 out", "2 outs")
dimnames(RUNS_out)[[1]] <- c("000", "001", "010", "011",
"100", "101", "110", "111")
RUNS_out
RUNS
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > 0, 1, 0),
ifelse(BASE2_RUN_ID > 0, 1, 0),
ifelse(BASE3_RUN_ID > 0, 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
RUNS_out <- matrix(round(RUNS$Mean, 2), 8, 3)
dimnames(RUNS_out)[[2]] <- c("0 outs", "1 out", "2 outs")
dimnames(RUNS_out)[[1]] <- c("000", "001", "010", "011",
"100", "101", "110", "111")
RUNS
?substr
knitr::opts_chunk$set(echo = FALSE)
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
library(tidyverse)
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
RUNS
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT))
data2022
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT))
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > 0, 1, 0),
ifelse(BASE2_RUN_ID > 0, 1, 0),
ifelse(BASE3_RUN_ID > 0, 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT))
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(!is.na(BASE1_RUN_ID), 1, 0),
ifelse(!is.na(BASE2_RUN_ID), 1, 0),
ifelse(!is.na(BASE3_RUN_ID), 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
Timeline <- Belli_Data |>
rename(Year = game_year) |>
summarise(.by = Year, `Total Run Value` = sum(delta_run_exp)) |>
ggplot(aes(x = Year, y = `Total Run Value`)) +
geom_bar(stat="identity", color = "blue") +
scale_x_discrete(limits = 2017:2023)
Timeline
library(readr)
data2022 <- read_csv("all2022.csv",
col_names = FALSE)
fields <- read.csv("http://bayesball.github.io/baseball/fields.csv")
names(data2022) <- fields[, "Header"]
data2022 |>
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) -> data2022
data2022 |>
summarise(.by = HALF.INNING,
Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) -> half_innings
data2022 |>
inner_join(half_innings, by = "HALF.INNING") |>
mutate(RUNS.ROI = MAX.RUNS - RUNS) |>
mutate(BASES =
paste(ifelse(!is.na(BASE1_RUN_ID), 1, 0),
ifelse(!is.na(BASE2_RUN_ID), 1, 0),
ifelse(!is.na(BASE3_RUN_ID), 1, 0), sep = ""),
STATE = paste(BASES, OUTS_CT)) |>
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID == 3 | RUN2_DEST_ID == 3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) |>
filter((STATE != NEW.STATE | RUNS.SCORED > 0)) |>
filter(Outs.Inning == 3) |>
summarise(.by = STATE, Mean = mean(RUNS.ROI)) |>
mutate(Outs = substr(STATE, 5, 5)) |>
arrange(Outs) -> RUNS
RUNS_out <- matrix(round(RUNS$Mean, 2), 8, 3)
dimnames(RUNS_out)[[2]] <- c("0 outs", "1 out", "2 outs")
dimnames(RUNS_out)[[1]] <- c("000", "001", "010", "011",
"100", "101", "110", "111")
RUNS
RUNS_out
RUNS
dimnames(RUNS_out)[[2]] <- c("0 outs", "1 out", "2 outs")
dimnames(RUNS_out)[[1]] <- c("000", "100", "010", "110",
"101", "011", "111", "001")
RUNS
RUNS_out
install.packages("rsconnect")
rsconnect::setAccountInfo(name='danielthom18',
token='3F412D34F0F7E47E580A1286538CF6C0',
secret='<SECRET>')
rsconnect::setAccountInfo(name='danielthom18',
token='3F412D34F0F7E47E580A1286538CF6C0',
secret='mdkczDVTRBZJbnqcxcK2paoiXprYOzg/E10Ld6jC')
library(shiny)
library(tidyverse)
Belli_Data <- read_csv("Belli_Data.csv")
runApp('Belli-App.R')
statcast2015 <- read_csv("statcast2015.csv")
View(statcast2015)
