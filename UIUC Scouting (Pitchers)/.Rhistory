),
tabBox(
title = "Strike Zone",
id = "kzone_box", height = "815px",
tabPanel("Batting Average", plotOutput('pitch_kzone_average')),
tabPanel("Frequency", plotOutput('pitch_kzone_freq')),
tabPanel("Exit Velo", plotOutput('pitch_kzone_exit_velo')),
tabPanel("Launch Angle", plotOutput('pitch_kzone_angle')),
tabPanel("Hard Hit %", plotOutput('pitch_kzone_hard_hit')),
tabPanel("Ground Ball %", plotOutput('pitch_kzone_groundball')),
tabPanel("Line Drive %", plotOutput('pitch_kzone_linedrive')),
tabPanel("Fly Ball %", plotOutput('pitch_kzone_flyball')),
tabPanel("Whiff %", plotOutput('pitch_kzone_whiff')),
tabPanel("Chase %", plotOutput('pitch_kzone_chase')),
tabPanel("Pitch Velocity", plotOutput('pitch_kzone_velo')),
tabPanel("Velocity Drop", plotOutput('pitch_kzone_drop')),
tabPanel("Effective Velocity", plotOutput('pitch_kzone_eff_velo')),
tabPanel("Taken Pitch %", plotOutput('pitch_kzone_taken')),
tabPanel("Pull %", plotOutput('pitch_kzone_pull'))
),
box(
title = "Spray Chart",
id = "kzone_box", height = "815px", plotOutput('pitch_spray'),
sliderInput('spray_exit_velo', "Exit Velocity", min = 0, max = 120,
value = c(0,120)),
sliderInput('spray_launch_angle', "Launch Angle", min = -90, max = 90,
value = c(-90,90)),
radioButtons('bb_type', "Batted Ball Type",
choices = c("All","GroundBall", "LineDrive", "FlyBall",
"Popup"))
),
tabBox(
title = "Pitch Info",
id = "release_graph", height = "500px",
tabPanel("Release Points", plotOutput('pitch_release')),
tabPanel("Movement", plotOutput('pitch_pfx')),
tabPanel("Break", plotOutput('pitch_break')),
tabPanel("Spin", plotOutput('pitch_spin')),
tabPanel("Velo", plotOutput('pitch_velo'))
),
tabBox(
title = "Game Timeline by Pitch",
id = "timeline", height = "800px",
tabPanel("Arm Height", plotOutput('pitch_timeline_arm_height')),
tabPanel("Pitch Velocity", plotOutput('pitch_timeline_velo')),
tabPanel("Strike %", plotOutput('pitch_timeline_strike')),
tabPanel("Whiff %", plotOutput('pitch_timeline_whiff')),
tabPanel("Chase %", plotOutput('pitch_timeline_chase')),
tabPanel("Hard Hit %", plotOutput('pitch_timeline_hard_hit')),
tabPanel("Ground Ball %", plotOutput('pitch_timeline_groundball')),
tabPanel("Line Drive %", plotOutput('pitch_timeline_linedrive')),
tabPanel("Fly Ball %", plotOutput('pitch_timeline_hard_hit')),
tabPanel("Exit Velo", plotOutput('pitch_timeline_exit_velo')),
tabPanel("Launch Angle", plotOutput('pitch_timeline_angle')),
tabPanel("Batting Average", plotOutput('pitch_timeline_avg'))
),
box(
title = "Linear Regression",
id = "model", height = "500px",
verbatimTextOutput('model_summary')
),
box(
title = "Summary Table",
id = "table", height = "500px",
dataTableOutput('table')
)
)
)
)
)
shinyApp(ui, server)
runApp()
Pitcher_Data <- read_csv("Pitcher_Data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
Pitcher_Data <- read_csv("Pitcher_Data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
Pitcher_Data <- read_csv("Pitcher_Data.csv")
runApp()
library(tidyverse)
Data <- read_csv("Data.csv")
sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$pitcher_name)
Data$pitcher_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$pitcher_name)
Data$batter_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$batter_name)
Data$Hard_Hit <- ifelse(Data$launch_speed >= 95, 1, 0)
Data$GroundBall <- ifelse(Data$bb_type == "GroundBall", 1, 0)
Data$LineDrive <- ifelse(Data$bb_type == "LineDrive", 1, 0)
Data$FlyBall <- ifelse(Data$bb_type == "FlyBall", 1, 0)
Data$Chase <- ifelse(Data$plate_x < -17/24 | Data$plate_x > 17/24 |
Data$plate_z < 1.65 | Data$plate_z > 3.65, 0, NA)
Data$Chase <- ifelse(Data$description == "FoulBall" |
Data$description == "InPlay" |
Data$description == "StrikeSwinging", 1, Data$Chase)
Data$Whiff <- ifelse(Data$description == "StrikeSwinging", 1, 0)
Data$Taken <- ifelse(Data$description == "StrikeCalled" |
Data$description == "BallCalled" |
Data$description == "BallinDirt" |
Data$description == "HitByPitch" , 1, 0)
Data$width <- "X"
Data$width <- ifelse(Data$plate_x < -17/24,
"Left Out Of Zone", Data$width)
Data$width <- ifelse(Data$plate_x >= -17/24 &
Data$plate_x < -0.2361112,
"Left", Data$width)
Data$width <- ifelse(Data$plate_x >= -0.2361112 &
Data$plate_x < 0.2361112,
"Middle", Data$width)
Data$width <- ifelse(Data$plate_x >= 0.2361112 &
Data$plate_x <= 17/24,
"Right", Data$width)
Data$width <- ifelse(Data$plate_x > 17/24,
"Right Out Of Zone", Data$width)
Data$height <- "Z"
Data$height <- ifelse(Data$plate_z < 1.65,
"Low Out Of Zone", Data$height)
Data$height <- ifelse(Data$plate_z >= 1.65 &
Data$plate_z < 2.316667,
"Low", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.316667 &
Data$plate_z < 2.983334,
"Middle", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.983334 &
Data$plate_z <= 3.65,
"High", Data$height)
Data$height <- ifelse(Data$plate_z > 3.65,
"High Out Of Zone", Data$height)
Data$hit <- ifelse(Data$events == "Single" | Data$events == "Double" |
Data$events == "Triple" | Data$events == "Home Run", 1, 0)
Data <- Data |>
filter(pitch_name != "Other") |>
filter(!is.na(pitch_name)) |>
filter(stand != "Undefined") |>
filter(!is.na(stand)) |>
filter(p_throws != "Undefined") |>
filter(!is.na(p_throws)) |>
mutate(location_x = sin(Bearing*pi/180) * hit_distance_sc) |>
mutate(location_y = cos(Bearing*pi/180) * hit_distance_sc) |>
mutate(hc_x = (location_x/2.5) + 125.42) |>
mutate(hc_y = 198.27 - (location_y/2.5))
Data$events <- factor(Data$events, levels = c("Out", "Single", "Double", "Triple",
"HomeRun", "Sacrifice", "Error",
"FieldersChoice", "Undefined"))
Data$pull <- ifelse((Data$stand == "Left" & Data$hc_x > 128) |
Data$stand == "Right" & Data$hc_x >= 128, 1, 0)
Data$strike <- ifelse(Data$description == "StrikeCalled" |
Data$description == "FoulBall" |
Data$description == "SwingingStrike" |
Data$description == "InPlay", 1, 0)
Pitcher_Arrange <- Data |>
filter(PitcherTeam == "ILL_ILL") |>
arrange(pitcher_name, GameUID) |>
mutate(Scenario = paste(pitcher_name, GameUID))
Pitcher_List <- split(Pitcher_Arrange, Pitcher_Arrange$Scenario)
Pitcher_List_2 <- lapply(Pitcher_List, function(x) {
mutate(x, `Pitches Thrown` = 1:nrow(x))
})
Pitcher_Data <- bind_rows(Pitcher_List_2)
write_csv(Pitcher_Data, "Pitcher_Data.csv")
Pitcher_Data <- read_csv("Pitcher_Data.csv")
library(tidyverse)
library(shiny)
library(shinydashboard)
Pitcher_Data <- read_csv("Pitcher_Data.csv")
View(Pitcher_Data)
Pitcher_Data |>
filter(is.na(launch_speed) & OutsOnPlay > 0)
unique(Pitcher_Data$description)
Pitcher_Data |>
filter(description == "StrikeSwinging" | description == "StrikeCalled") |>
filter(OutsOnPlay > 0)
Pitcher_Data |>
filter(description == "StrikeSwinging" | description == "StrikeCalled") |>
filter(events == "Out")
library(tidyverse)
Data <- read_csv("Data.csv")
Data$events <- ifelse(Data$description == "StrikeSwinging" |
Data$description == "StrikeCalled", "Strikeout",
Data$events)
write_csv(Pitcher_Data, "Pitcher_Data.csv")
Pitcher_Arrange <- Data |>
filter(PitcherTeam == "ILL_ILL") |>
arrange(pitcher_name, GameUID) |>
mutate(Scenario = paste(pitcher_name, GameUID))
Pitcher_List <- split(Pitcher_Arrange, Pitcher_Arrange$Scenario)
Pitcher_List_2 <- lapply(Pitcher_List, function(x) {
mutate(x, `Pitches Thrown` = 1:nrow(x))
})
Pitcher_Data <- bind_rows(Pitcher_List_2)
write_csv(Pitcher_Data, "Pitcher_Data.csv")
shiny::runApp()
shiny::runApp()
runApp()
Pitcher_Data <- read_csv("Pitcher_Data.csv")
runApp()
library(tidyverse)
Data <- read_csv("Data.csv")
Data$pitcher_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$pitcher_name)
Data$batter_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$batter_name)
Data$pitcher_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$pitcher_name)
Data$batter_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$batter_name)
Data$events <- ifelse(Data$description == "StrikeSwinging" |
Data$description == "StrikeCalled", "Strikeout",
Data$events)
Data$Hard_Hit <- ifelse(Data$launch_speed >= 95, 1, 0)
Data$GroundBall <- ifelse(Data$bb_type == "GroundBall", 1, 0)
Data$LineDrive <- ifelse(Data$bb_type == "LineDrive", 1, 0)
Data$FlyBall <- ifelse(Data$bb_type == "FlyBall", 1, 0)
Data$Chase <- ifelse(Data$plate_x < -17/24 | Data$plate_x > 17/24 |
Data$plate_z < 1.65 | Data$plate_z > 3.65, 0, NA)
Data$Chase <- ifelse(Data$description == "FoulBall" |
Data$description == "InPlay" |
Data$description == "StrikeSwinging", 1, Data$Chase)
Data$Whiff <- ifelse(Data$description == "StrikeSwinging", 1, 0)
Data$Taken <- ifelse(Data$description == "StrikeCalled" |
Data$description == "BallCalled" |
Data$description == "BallinDirt" |
Data$description == "HitByPitch" , 1, 0)
Data$width <- "X"
Data$width <- ifelse(Data$plate_x < -17/24,
"Left Out Of Zone", Data$width)
Data$width <- ifelse(Data$plate_x >= -17/24 &
Data$plate_x < -0.2361112,
"Left", Data$width)
Data$width <- ifelse(Data$plate_x >= -0.2361112 &
Data$plate_x < 0.2361112,
"Middle", Data$width)
Data$width <- ifelse(Data$plate_x >= 0.2361112 &
Data$plate_x <= 17/24,
"Right", Data$width)
Data$width <- ifelse(Data$plate_x > 17/24,
"Right Out Of Zone", Data$width)
Data$height <- "Z"
Data$height <- ifelse(Data$plate_z < 1.65,
"Low Out Of Zone", Data$height)
Data$height <- ifelse(Data$plate_z >= 1.65 &
Data$plate_z < 2.316667,
"Low", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.316667 &
Data$plate_z < 2.983334,
"Middle", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.983334 &
Data$plate_z <= 3.65,
"High", Data$height)
Data$height <- ifelse(Data$plate_z > 3.65,
"High Out Of Zone", Data$height)
Data$hit <- ifelse(Data$events == "Single" | Data$events == "Double" |
Data$events == "Triple" | Data$events == "Home Run", 1, 0)
Data <- Data |>
filter(pitch_name != "Other") |>
filter(!is.na(pitch_name)) |>
filter(stand != "Undefined") |>
filter(!is.na(stand)) |>
filter(p_throws != "Undefined") |>
filter(!is.na(p_throws)) |>
mutate(location_x = sin(Bearing*pi/180) * hit_distance_sc) |>
mutate(location_y = cos(Bearing*pi/180) * hit_distance_sc) |>
mutate(hc_x = (location_x/2.5) + 125.42) |>
mutate(hc_y = 198.27 - (location_y/2.5))
Data$events <- factor(Data$events, levels = c("Out", "Single", "Double", "Triple",
"HomeRun", "Sacrifice", "Error",
"FieldersChoice", "Undefined"))
Data$pull <- ifelse((Data$stand == "Left" & Data$hc_x > 128) |
Data$stand == "Right" & Data$hc_x >= 128, 1, 0)
Data$strike <- ifelse(Data$description == "StrikeCalled" |
Data$description == "FoulBall" |
Data$description == "SwingingStrike" |
Data$description == "InPlay", 1, 0)
Pitcher_Arrange <- Data |>
filter(PitcherTeam == "ILL_ILL") |>
arrange(pitcher_name, GameUID) |>
mutate(Scenario = paste(pitcher_name, GameUID))
Pitcher_List <- split(Pitcher_Arrange, Pitcher_Arrange$Scenario)
Pitcher_List_2 <- lapply(Pitcher_List, function(x) {
mutate(x, `Pitches Thrown` = 1:nrow(x))
})
Pitcher_Data <- bind_rows(Pitcher_List_2)
write_csv(Pitcher_Data, "Pitcher_Data.csv")
Pitcher_Data <- read_csv("Pitcher_Data.csv")
library(tidyverse)
library(shiny)
library(shinydashboard)
Pitcher_Data <- read_csv("Pitcher_Data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(Pitcher_Data$events)
library(tidyverse)
Data <- read_csv("Data.csv")
Data$pitcher_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$pitcher_name)
Data$batter_name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", Data$batter_name)
Data$Hard_Hit <- ifelse(Data$launch_speed >= 95, 1, 0)
Data$GroundBall <- ifelse(Data$bb_type == "GroundBall", 1, 0)
Data$LineDrive <- ifelse(Data$bb_type == "LineDrive", 1, 0)
Data$FlyBall <- ifelse(Data$bb_type == "FlyBall", 1, 0)
Data$Chase <- ifelse(Data$plate_x < -17/24 | Data$plate_x > 17/24 |
Data$plate_z < 1.65 | Data$plate_z > 3.65, 0, NA)
Data$Chase <- ifelse(Data$description == "FoulBall" |
Data$description == "InPlay" |
Data$description == "StrikeSwinging", 1, Data$Chase)
Data$Whiff <- ifelse(Data$description == "StrikeSwinging", 1, 0)
Data$Taken <- ifelse(Data$description == "StrikeCalled" |
Data$description == "BallCalled" |
Data$description == "BallinDirt" |
Data$description == "HitByPitch" , 1, 0)
Data$width <- "X"
Data$width <- ifelse(Data$plate_x < -17/24,
"Left Out Of Zone", Data$width)
Data$width <- ifelse(Data$plate_x >= -17/24 &
Data$plate_x < -0.2361112,
"Left", Data$width)
Data$width <- ifelse(Data$plate_x >= -0.2361112 &
Data$plate_x < 0.2361112,
"Middle", Data$width)
Data$width <- ifelse(Data$plate_x >= 0.2361112 &
Data$plate_x <= 17/24,
"Right", Data$width)
Data$width <- ifelse(Data$plate_x > 17/24,
"Right Out Of Zone", Data$width)
Data$height <- "Z"
Data$height <- ifelse(Data$plate_z < 1.65,
"Low Out Of Zone", Data$height)
Data$height <- ifelse(Data$plate_z >= 1.65 &
Data$plate_z < 2.316667,
"Low", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.316667 &
Data$plate_z < 2.983334,
"Middle", Data$height)
Data$height <- ifelse(Data$plate_z >= 2.983334 &
Data$plate_z <= 3.65,
"High", Data$height)
Data$height <- ifelse(Data$plate_z > 3.65,
"High Out Of Zone", Data$height)
Data$hit <- ifelse(Data$events == "Single" | Data$events == "Double" |
Data$events == "Triple" | Data$events == "Home Run", 1, 0)
Data <- Data |>
filter(pitch_name != "Other") |>
filter(!is.na(pitch_name)) |>
filter(stand != "Undefined") |>
filter(!is.na(stand)) |>
filter(p_throws != "Undefined") |>
filter(!is.na(p_throws)) |>
mutate(location_x = sin(Bearing*pi/180) * hit_distance_sc) |>
mutate(location_y = cos(Bearing*pi/180) * hit_distance_sc) |>
mutate(hc_x = (location_x/2.5) + 125.42) |>
mutate(hc_y = 198.27 - (location_y/2.5))
Data$events <- ifelse(Data$description == "StrikeSwinging" |
Data$description == "StrikeCalled", "Strikeout",
Data$events)
Data$pull <- ifelse((Data$stand == "Left" & Data$hc_x > 128) |
Data$stand == "Right" & Data$hc_x >= 128, 1, 0)
Data$strike <- ifelse(Data$description == "StrikeCalled" |
Data$description == "FoulBall" |
Data$description == "SwingingStrike" |
Data$description == "InPlay", 1, 0)
Pitcher_Arrange <- Data |>
filter(PitcherTeam == "ILL_ILL") |>
arrange(pitcher_name, GameUID) |>
mutate(Scenario = paste(pitcher_name, GameUID))
Pitcher_List <- split(Pitcher_Arrange, Pitcher_Arrange$Scenario)
Pitcher_List_2 <- lapply(Pitcher_List, function(x) {
mutate(x, `Pitches Thrown` = 1:nrow(x))
})
Pitcher_Data <- bind_rows(Pitcher_List_2)
write_csv(Pitcher_Data, "Pitcher_Data.csv")
shiny::runApp()
shiny::runApp()
runApp()
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(lattice)
library(caret)
library(tidyverse)
Pitcher_Data <- read_csv("Pitcher_Data.csv")
Model_Names <- c("release_speed", "VertRelAngle", "HorzRelAngle", "release_spin_rate",
"spin_axis", "Tilt", "release_pos_z", "release_pos_x",
"release_extension", "VertBreak", "InducedVertBreak", "HorzBreak",
"plate_z", "plate_x", "ZoneSpeed", "VertApprAngle", "HorzApprAngle",
"ZoneTime", "launch_speed", "launch_angle", "Direction", "HitSpinRate",
"PositionAt110X", "PositionAt110Y", "PositionAt110Z",
"hit_distance_sc", "pfx_x", "pfx_z", "x0", "y0", "z0", "vx0",
"vy0", "vz0", "ax", "ay", "az", "effective_speed", "SpeedDrop",
"HitSpinAxis", "PitchTrajectoryXc0", "PitchTrajectoryXc1",
"PitchTrajectoryXc2", "PitchTrajectoryYc0", "PitchTrajectoryYc1",
"PitchTrajectoryYc2", "PitchTrajectoryZc0", "PitchTrajectoryZc1",
"PitchTrajectoryZc2")
runApp()
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(lattice)
library(caret)
library(tidyverse)
Pitcher_Data <- read_csv("Pitcher_Data.csv")
Model_Names <- c("release_speed", "VertRelAngle", "HorzRelAngle", "release_spin_rate",
"spin_axis", "Tilt", "release_pos_z", "release_pos_x",
"release_extension", "VertBreak", "InducedVertBreak", "HorzBreak",
"plate_z", "plate_x", "ZoneSpeed", "VertApprAngle", "HorzApprAngle",
"ZoneTime", "launch_speed", "launch_angle", "Direction", "HitSpinRate",
"PositionAt110X", "PositionAt110Y", "PositionAt110Z",
"hit_distance_sc", "pfx_x", "pfx_z", "x0", "y0", "z0", "vx0",
"vy0", "vz0", "ax", "ay", "az", "effective_speed", "SpeedDrop",
"HitSpinAxis", "PitchTrajectoryXc0", "PitchTrajectoryXc1",
"PitchTrajectoryXc2", "PitchTrajectoryYc0", "PitchTrajectoryYc1",
"PitchTrajectoryYc2", "PitchTrajectoryZc0", "PitchTrajectoryZc1",
"PitchTrajectoryZc2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Model_Names <- sort("Whiff", "Chase", "Bearing", "release_speed", "VertRelAngle",
"HorzRelAngle", "release_spin_rate",
"spin_axis", "Tilt", "release_pos_z", "release_pos_x",
"release_extension", "VertBreak", "InducedVertBreak", "HorzBreak",
"plate_z", "plate_x", "ZoneSpeed", "VertApprAngle", "HorzApprAngle",
"ZoneTime", "launch_speed", "launch_angle", "Direction", "HitSpinRate",
"PositionAt110X", "PositionAt110Y", "PositionAt110Z",
"hit_distance_sc", "pfx_x", "pfx_z", "x0", "y0", "z0", "vx0",
"vy0", "vz0", "ax", "ay", "az", "effective_speed", "SpeedDrop",
"HitSpinAxis", "PitchTrajectoryXc0", "PitchTrajectoryXc1",
"PitchTrajectoryXc2", "PitchTrajectoryYc0", "PitchTrajectoryYc1",
"PitchTrajectoryYc2", "PitchTrajectoryZc0", "PitchTrajectoryZc1",
"PitchTrajectoryZc2")
Model_Names <- sort(c("Whiff", "Chase", "Bearing", "release_speed", "VertRelAngle",
"HorzRelAngle", "release_spin_rate",
"spin_axis", "Tilt", "release_pos_z", "release_pos_x",
"release_extension", "VertBreak", "InducedVertBreak", "HorzBreak",
"plate_z", "plate_x", "ZoneSpeed", "VertApprAngle", "HorzApprAngle",
"ZoneTime", "launch_speed", "launch_angle", "Direction", "HitSpinRate",
"PositionAt110X", "PositionAt110Y", "PositionAt110Z",
"hit_distance_sc", "pfx_x", "pfx_z", "x0", "y0", "z0", "vx0",
"vy0", "vz0", "ax", "ay", "az", "effective_speed", "SpeedDrop",
"HitSpinAxis", "PitchTrajectoryXc0", "PitchTrajectoryXc1",
"PitchTrajectoryXc2", "PitchTrajectoryYc0", "PitchTrajectoryYc1",
"PitchTrajectoryYc2", "PitchTrajectoryZc0", "PitchTrajectoryZc1",
"PitchTrajectoryZc2"))
Model_Names
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(lattice)
library(caret)
library(tidyverse)
Pitcher_Data <- read_csv("Pitcher_Data.csv")
library(tidyverse)
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(lattice)
library(caret)
runApp()
runApp()
runApp()
runApp()
